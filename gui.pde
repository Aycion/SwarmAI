/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void resetHit(GButton source, GEvent event) { //_CODE_:resetButton:874222:
  setup();
} //_CODE_:resetButton:874222:

public void pauseHis(GButton source, GEvent event) { //_CODE_:button1:393250:
  if (pause) {
    pause = false;
  } else {
    pause = true;
  }
} //_CODE_:button1:393250:

public void inertiaChange(GSlider source, GEvent event) { //_CODE_:inertiaSlide:870762:
  INERTIA = source.getValueI();
} //_CODE_:inertiaSlide:870762:

public void speedChange(GSlider source, GEvent event) { //_CODE_:speedSlider:661103:
  SPEED_LIMIT = source.getValueI();
} //_CODE_:speedSlider:661103:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  resetButton = new GButton(this, 777, 93, 53, 30);
  resetButton.setText("Reset");
  resetButton.setTextBold();
  resetButton.setLocalColorScheme(GCScheme.RED_SCHEME);
  resetButton.addEventHandler(this, "resetHit");
  button1 = new GButton(this, 764, 47, 80, 30);
  button1.setText("Pause");
  button1.addEventHandler(this, "pauseHis");
  inertiaSlide = new GSlider(this, 978, 100, 200, 40, 10.0);
  inertiaSlide.setShowValue(true);
  inertiaSlide.setShowLimits(true);
  inertiaSlide.setRotation(PI/2, GControlMode.CORNER);
  inertiaSlide.setLimits(2.0, 1.0, 30.0);
  inertiaSlide.setNbrTicks(30);
  inertiaSlide.setStickToTicks(true);
  inertiaSlide.setShowTicks(true);
  inertiaSlide.setNumberFormat(G4P.DECIMAL, 1);
  inertiaSlide.setOpaque(false);
  inertiaSlide.addEventHandler(this, "inertiaChange");
  label1 = new GLabel(this, 920, 70, 80, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Inertia");
  label1.setOpaque(false);
  speedSlider = new GSlider(this, 894, 100, 200, 40, 10.0);
  speedSlider.setTextOrientation(G4P.ORIENT_RIGHT);
  speedSlider.setRotation(PI/2, GControlMode.CORNER);
  speedSlider.setLimits(1.0, 1.0, 25.0);
  speedSlider.setNbrTicks(25);
  speedSlider.setStickToTicks(true);
  speedSlider.setNumberFormat(G4P.ORIENT_RIGHT, 1);
  speedSlider.setOpaque(false);
  speedSlider.addEventHandler(this, "speedChange");
  speedLabel = new GLabel(this, 835, 70, 80, 20);
  speedLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  speedLabel.setText("Speed");
  speedLabel.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GButton resetButton; 
GButton button1; 
GSlider inertiaSlide; 
GLabel label1; 
GSlider speedSlider; 
GLabel speedLabel; 
